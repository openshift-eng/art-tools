{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "image_config.base.schema.json",
  "title": "Image Configuration",
  "type": "object",
  "properties": {
    "additional_tags": {
      "type": "array",
      "description": "Floating tags under which the resulting image can be pulled from regigistry-proxy.engineering.redhat.com",
      "items": {
        "type": "string",
        "minLength": 1
      }
    },
    "additional_tags!": {
      "$ref": "#/properties/additional_tags"
    },
    "additional_tags?": {
      "$ref": "#/properties/additional_tags"
    },
    "additional_tags-": {},
    "alternative_upstream": {
      "description": "List of configuration override that should be applied when using canonical builders, depending on upstream RHEL version",
      "type": "array",
      "minLength": 1,
      "items": {
        "type": "object",
        "properties": {
          "when": {
            "description": "Upstream RHEL version that must be matched to apply the alternate config",
            "type": "string"
          },
          "distgit": {
            "description": "Alternative configuration of the midstream repository, distgit",
            "type": "object",
            "properties": {
              "branch": {
                "description": "Alternative distgit branch",
                "type": "string",
                "minLength": 1
              }
            }
          },
          "enabled_repos": {
            "description": "Alternative list of repositories that should be enabled at image build time. List of keys of group.yml's `repos`",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "type": "array"
          },
          "from": {
            "description": "Ordered list of what the FROMs in the upstream Dockerfile should be replaced with",
            "type": "object",
            "properties": {
              "builder": {
                "description": "List of images of the non-final layer",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "stream": {
                      "description": "Base images from streams.yml",
                      "type": "string",
                      "minLength": 1
                    },
                    "stream!": {
                      "$ref": "#/properties/from/properties/builder/items/properties/stream"
                    },
                    "stream?": {
                      "$ref": "#/properties/from/properties/builder/items/properties/stream"
                    },
                    "stream-": {},
                    "member": {
                      "description": "Base image managed by ocp-build-data/images in the current branch",
                      "type": "string",
                      "minLength": 1
                    },
                    "member!": {
                      "$ref": "#/properties/from/properties/builder/items/properties/member"
                    },
                    "member?": {
                      "$ref": "#/properties/from/properties/builder/items/properties/member"
                    },
                    "member-": {},
                    "image": {
                      "description": "Currently unused",
                      "type": "string",
                      "minLength": 1
                    },
                    "image!": {
                      "$ref": "#/properties/from/properties/builder/items/properties/image"
                    },
                    "image?": {
                      "$ref": "#/properties/from/properties/builder/items/properties/image"
                    },
                    "image-": {}
                  }
                }
              },
                "stream": {
                  "type": "string",
                  "minLength": 1
                },
                "stream!": {
                  "$ref": "#/properties/from/properties/stream"
                },
                "stream?": {
                  "$ref": "#/properties/from/properties/stream"
                },
                "stream-": {},
                "member": {
                  "type": "string",
                  "minLength": 1
                },
                "member!": {
                  "$ref": "#/properties/from/properties/member"
                },
                "member?": {
                  "$ref": "#/properties/from/properties/member"
                },
                "member-": {},
                "image": {
                  "type": "string",
                  "minLength": 1
                },
                "image!": {
                  "$ref": "#/properties/from/properties/image"
                },
                "image?": {
                  "$ref": "#/properties/from/properties/image"
                },
                "image-": {}
              },
            "additionalProperties": false
          },
          "name": {
            "description": "Alternative reference to Comet repo name",
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "alternative_upstream?": {
      "$ref": "#/properties/alternative_upstream"
    },
    "alternative_upstream!": {
      "$ref": "#/properties/alternative_upstream"
    },
    "arches": {
      "type": "array",
      "description": "CPU architectures that this image is built for. Overrides the default from group.yml",
      "items": {
        "$ref": "arch.schema.json"
      }
    },
    "arches!": {
      "$ref": "#/properties/arches"
    },
    "arches?": {
      "$ref": "#/properties/arches"
    },
    "arches-": {},
    "base_only": {
      "description": "If true, the resulting image will not be attached to advisories. Typical for base images",
      "type": "boolean"
    },
    "base_only!": {
      "$ref": "#/properties/base_only"
    },
    "base_only?": {
      "$ref": "#/properties/base_only"
    },
    "base_only-": {},
    "cachito": {
      "description": "Cachito integration configuration",
      "$ref": "cachito.schema.json"
    },
    "cachito!": {
      "$ref": "#/properties/cachito"
    },
    "cachito?": {
      "$ref": "#/properties/cachito"
    },
    "cachito-": {},
    "container_yaml": {
      "description": "Unknown purpose XXX",
      "type": "object"
    },
    "container_yaml!": {
      "$ref": "#/properties/container_yaml"
    },
    "container_yaml?": {
      "$ref": "#/properties/container_yaml"
    },
    "container_yaml-": {},
    "content": {
      "description": "Image content configuration XXX",
      "$ref": "image_content.base.schema.json"
    },
    "content!": {
      "$ref": "#/properties/content"
    },
    "content?": {
      "$ref": "#/properties/content"
    },
    "content-": {},
    "canonical_builders_from_upstream": {
      "type": "boolean"
    },
    "canonical_builders_from_upstream?": {
      "$ref": "#/properties/canonical_builders_from_upstream"
    },
    "canonical_builders_from_upstream!": {
      "$ref": "#/properties/canonical_builders_from_upstream"
    },
    "canonical_builders_from_upstream-": {},
    "dependencies": {
      "$ref": "assembly_dependencies.schema.json"
    },
    "dependencies!": {
      "$ref": "#/properties/dependencies"
    },
    "dependencies?": {
      "$ref": "#/properties/dependencies"
    },
    "dependencies-": {},
    "dependents": {
      "description": "List of images that need to rebuild if this image builds. Typically, operands list their operators here.",
      "items": {
        "type": "string",
        "minLength": 1
      },
      "type": "array"
    },
    "dependents!": {
      "$ref": "#/properties/dependents"
    },
    "dependents?": {
      "$ref": "#/properties/dependents"
    },
    "dependents-": {},
    "distgit": {
      "description": "Configuration of the midstream repository, distgit",
      "type": "object",
      "properties": {
        "namespace": {
          "description": "The distgit namespace, by default rpms for rpms and containers for images",
          "type": "string",
          "enum": [
            "apbs",
            "containers",
            "rpms"
          ]
        },
        "namespace!": {
          "$ref": "#/properties/distgit/properties/namespace"
        },
        "namespace?": {
          "$ref": "#/properties/distgit/properties/namespace"
        },
        "namespace-": {},
        "component": {
          "description": "The name in distgit for this image. Default to file name in ocp-build-data",
          "type": "string",
          "minLength": 1
        },
        "component!": {
          "$ref": "#/properties/distgit/properties/component"
        },
        "component?": {
          "$ref": "#/properties/distgit/properties/component"
        },
        "component-": {},
        "bundle_component": {
          "description": "Component of the bundle/metadata repository",
          "type": "string",
          "minLength": 1
        },
        "bundle_component!": {
          "$ref": "#/properties/distgit/properties/bundle_component"
        },
        "bundle_component?": {
          "$ref": "#/properties/distgit/properties/bundle_component"
        },
        "bundle_component-": {},
        "branch": {
          "description": "Distgit branch. Defaults to value in group.yml",
          "type": "string",
          "minLength": 1
        },
        "branch!": {
          "$ref": "#/properties/distgit/properties/branch"
        },
        "branch?": {
          "$ref": "#/properties/distgit/properties/branch"
        },
        "branch-": {},
        "name": {
          "description": "Override distgit name",
          "type": "string"
        },
        "name!": {
          "$ref": "#/properties/distgit/properties/name"
        },
        "name?": {
          "$ref": "#/properties/distgit/properties/name"
        },
        "name-": {
          "$ref": "#/properties/distgit/properties/name"
        }
      },
      "additionalProperties": false
    },
    "distgit!": {
      "$ref": "#/properties/distgit"
    },
    "distgit?": {
      "$ref": "#/properties/distgit"
    },
    "distgit-": {},
    "envs": {
      "description": "Environment variables that get injected in the Dockerfile during rebase",
      "type": "object",
      "patternProperties": {
        "^.+$": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "envs!": {
      "$ref": "#/properties/envs"
    },
    "envs?": {
      "$ref": "#/properties/envs"
    },
    "envs-": {},
    "final_stage_user": {
      "description": "When doozer injects USER 0 to do a yum update, this field instructs doozer to set this user afterwards in the final stage of the build.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "integer"
        }
      ]
    },
    "final_stage_user!": {
      "$ref": "#/properties/final_stage_user"
    },
    "final_stage_user?": {
      "$ref": "#/properties/final_stage_user"
    },
    "final_stage_user-": {},
    "enabled_repos": {
      "description": "List of repositories that should be enabled at image build time. List of keys of group.yml's `repos`",
      "items": {
        "type": "string",
        "minLength": 1
      },
      "type": "array"
    },
    "enabled_repos!": {
      "$ref": "#/properties/enabled_repos"
    },
    "enabled_repos?": {
      "$ref": "#/properties/enabled_repos"
    },
    "enabled_repos-": {},
    "non_shipping_repos": {
      "description": "List of repositories that should be enabled at build time, but do not result in installed rpms in the final layer. For security accounting, declare this repo to not be present in last layer",
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1
      }
    },
    "non_shipping_repos!": {
      "$ref": "#/properties/non_shipping_repos"
    },
    "non_shipping_repos?": {
      "$ref": "#/properties/non_shipping_repos"
    },
    "non_shipping_repos-": {},
    "non_shipping_rpms": {
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1
      }
    },
    "non_shipping_rpms!": {
      "$ref": "#/properties/non_shipping_rpms"
    },
    "non_shipping_rpms?": {
      "$ref": "#/properties/non_shipping_rpms"
    },
    "non_shipping_rpms-": {},
    "from": {
      "description": "Ordered list of what the FROMs in the upstream Dockerfile should be replaced with",
      "type": "object",
      "properties": {
        "builder": {
          "description": "List of images of the non-final layer",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "stream": {
                "description": "Base images from streams.yml",
                "type": "string",
                "minLength": 1
              },
              "stream!": {
                "$ref": "#/properties/from/properties/builder/items/properties/stream"
              },
              "stream?": {
                "$ref": "#/properties/from/properties/builder/items/properties/stream"
              },
              "stream-": {},
              "member": {
                "description": "Base image managed by ocp-build-data/images in the current branch",
                "type": "string",
                "minLength": 1
              },
              "member!": {
                "$ref": "#/properties/from/properties/builder/items/properties/member"
              },
              "member?": {
                "$ref": "#/properties/from/properties/builder/items/properties/member"
              },
              "member-": {},
              "image": {
                "description": "Currently unused",
                "type": "string",
                "minLength": 1
              },
              "image!": {
                "$ref": "#/properties/from/properties/builder/items/properties/image"
              },
              "image?": {
                "$ref": "#/properties/from/properties/builder/items/properties/image"
              },
              "image-": {}
            }
          }
        },
        "stream": {
          "type": "string",
          "minLength": 1
        },
        "stream!": {
          "$ref": "#/properties/from/properties/stream"
        },
        "stream?": {
          "$ref": "#/properties/from/properties/stream"
        },
        "stream-": {},
        "member": {
          "type": "string",
          "minLength": 1
        },
        "member!": {
          "$ref": "#/properties/from/properties/member"
        },
        "member?": {
          "$ref": "#/properties/from/properties/member"
        },
        "member-": {},
        "image": {
          "type": "string",
          "minLength": 1
        },
        "image!": {
          "$ref": "#/properties/from/properties/image"
        },
        "image?": {
          "$ref": "#/properties/from/properties/image"
        },
        "image-": {}
      },
      "additionalProperties": false
    },
    "from!": {
      "$ref": "#/properties/from"
    },
    "from?": {
      "$ref": "#/properties/from"
    },
    "from-": {},
    "labels": {
      "description": "Lables that get added to the Dockerfile",
      "type": "object",
      "properties": {
        "summary": {
          "type": "string",
          "minLength": 1
        },
        "summary!": {
          "$ref": "#/properties/labels/properties/summary"
        },
        "summary?": {
          "$ref": "#/properties/labels/properties/summary"
        },
        "summary-": {},
        "License": {
          "type": "string",
          "minLength": 1
        },
        "License!": {
          "$ref": "#/properties/labels/properties/License"
        },
        "License?": {
          "$ref": "#/properties/labels/properties/License"
        },
        "License-": {},
        "com.redhat.delivery.appregistry": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1
            },
            {
              "type": "boolean"
            }
          ]
        },
        "com.redhat.delivery.appregistry!": {
          "$ref": "#/properties/labels/properties/com.redhat.delivery.appregistry"
        },
        "com.redhat.delivery.appregistry?": {
          "$ref": "#/properties/labels/properties/com.redhat.delivery.appregistry"
        },
        "com.redhat.delivery.appregistry-": {},
        "com.redhat.hotfix": {
          "type": "string"
        },
        "com.redhat.prerelease": {
          "type": ["boolean", "string"]
        },
        "io.k8s.description": {
          "type": "string",
          "minLength": 1
        },
        "io.k8s.description!": {
          "$ref": "#/properties/labels/properties/io.k8s.description"
        },
        "io.k8s.description?": {
          "$ref": "#/properties/labels/properties/io.k8s.description"
        },
        "io.k8s.description-": {},
        "io.k8s.display-name": {
          "type": "string",
          "minLength": 1
        },
        "io.k8s.display-name!": {
          "$ref": "#/properties/labels/properties/io.k8s.display-name"
        },
        "io.k8s.display-name?": {
          "$ref": "#/properties/labels/properties/io.k8s.display-name"
        },
        "io.k8s.display-name-": {},
        "io.openshift.release.operator": {
          "type": "string",
          "minLength": 1
        },
        "io.openshift.release.operator!": {
          "$ref": "#/properties/labels/properties/io.openshift.release.operator"
        },
        "io.openshift.release.operator?": {
          "$ref": "#/properties/labels/properties/io.openshift.release.operator"
        },
        "io.openshift.release.operator-": {},
        "io.openshift.tags": {
          "type": "string",
          "minLength": 1
        },
        "io.openshift.tags!": {
          "$ref": "#/properties/labels/properties/io.openshift.tags"
        },
        "io.openshift.tags?": {
          "$ref": "#/properties/labels/properties/io.openshift.tags"
        },
        "io.openshift.tags-": {},
        "vendor": {
          "type": "string",
          "minLength": 1
        },
        "vendor!": {
          "$ref": "#/properties/labels/properties/vendor"
        },
        "vendor?": {
          "$ref": "#/properties/labels/properties/vendor"
        },
        "vendor-": {}
      },
      "additionalProperties": false
    },
    "labels!": {
      "$ref": "#/properties/labels"
    },
    "labels?": {
      "$ref": "#/properties/labels"
    },
    "labels-": {},
    "image_build_method": {
      "description": "OSBS image build method to be used",
      "type": "string",
      "enum": ["osbs2"]
    },
    "image_build_method!": {
      "$ref": "#/properties/image_build_method"
    },
    "image_build_method?": {
      "$ref": "#/properties/image_build_method"
    },
    "image_build_method-": {},
    "mode": {
      "description": "How automation should treat this image",
      "type": "string",
      "enum": [
        "auto",
        "disabled",
        "wip"
      ]
    },
    "mode!": {
      "$ref": "#/properties/mode"
    },
    "mode?": {
      "$ref": "#/properties/mode"
    },
    "mode-": {},
    "name": {
      "description": "Ought to refer somewhat to the name on Comet",
      "type": "string",
      "minLength": 1
    },
    "name!": {
      "$ref": "#/properties/name"
    },
    "name?": {
      "$ref": "#/properties/name"
    },
    "name-": {},
    "odcs": {
      "description": "Configuration for an alternative, unused method for making rpms available to builds",
      "type": "object",
      "properties": {
        "packages": {
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "enum": [
                "auto",
                "manual"
              ]
            },
            "mode!": {
              "$ref": "#/properties/odcs/properties/packages/properties/mode"
            },
            "mode?": {
              "$ref": "#/properties/odcs/properties/packages/properties/mode"
            },
            "mode-": {},
            "list": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              }
            },
            "list!": {
              "$ref": "#/properties/odcs/properties/packages/properties/list"
            },
            "list?": {
              "$ref": "#/properties/odcs/properties/packages/properties/list"
            },
            "list-": {},
            "exclude": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              }
            },
            "exclude!": {
              "$ref": "#/properties/odcs/properties/packages/properties/exclude"
            },
            "exclude?": {
              "$ref": "#/properties/odcs/properties/packages/properties/exclude"
            },
            "exclude-": {}
          },
          "additionalProperties": false
        },
        "packages!": {
          "$ref": "#/properties/odcs/properties/packages"
        },
        "packages?": {
          "$ref": "#/properties/odcs/properties/packages"
        },
        "packages-": {}
      },
      "additionalProperties": false
    },
    "odcs!": {
      "$ref": "#/properties/odcs"
    },
    "odcs?": {
      "$ref": "#/properties/odcs"
    },
    "odcs-": {},
    "no_oit_comments": {
      "description": "Deprecated. Only used in 3.11 and 4.6",
      "type": "boolean"
    },
    "no_oit_comments!": {
      "$ref": "#/properties/no_oit_comments"
    },
    "no_oit_comments?": {
      "$ref": "#/properties/no_oit_comments"
    },
    "no_oit_comments-": {},
    "owners": {
      "description": "Email addresses that will receive notification on build events",
      "type": "array",
      "items": {
        "type": "string",
        "format": "email"
      }
    },
    "owners!": {
      "$ref": "#/properties/owners"
    },
    "owners?": {
      "$ref": "#/properties/owners"
    },
    "owners-": {},
    "payload_name": {
      "description": "Name under which the image is referred to in the payload. May be different from the Comet name",
      "type": "string",
      "minLength": 1
    },
    "payload_name!": {
      "$ref": "#/properties/payload_name"
    },
    "payload_name?": {
      "$ref": "#/properties/payload_name"
    },
    "payload_name-": {},
    "push": {
      "description": "Deprecated. Unused after 3.11 and 4.6",
      "type": "object",
      "properties": {
        "late": {
          "type": "boolean"
        },
        "late!": {
          "$ref": "#/properties/push/properties/late"
        },
        "late?": {
          "$ref": "#/properties/push/properties/late"
        },
        "late-": {},
        "repos": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "repos!": {
          "$ref": "#/properties/push/properties/repos"
        },
        "repos?": {
          "$ref": "#/properties/push/properties/repos"
        },
        "repos-": {},
        "additional_tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "additional_tags!": {
          "$ref": "#/properties/push/properties/additional_tags"
        },
        "additional_tags?": {
          "$ref": "#/properties/push/properties/additional_tags"
        },
        "additional_tags-": {}
      },
      "additionalProperties": false
    },
    "push!": {
      "$ref": "#/properties/push"
    },
    "push?": {
      "$ref": "#/properties/push"
    },
    "push-": {},
    "required": {
      "description": "Currently unused. Deprecated.",
      "type": "boolean"
    },
    "required!": {
      "$ref": "#/properties/required"
    },
    "required?": {
      "$ref": "#/properties/required"
    },
    "required-": {},
    "scan_sources": {
      "description": "Configure conditions under which builds are triggered",
      "type": "object",
      "properties": {
        "extra_packages": {
          "description": "Currently unused",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1
              },
              "name!": {
                "$ref": "#/properties/scan_sources/properties/extra_packages/items/properties/name"
              },
              "name?": {
                "$ref": "#/properties/scan_sources/properties/extra_packages/items/properties/name"
              },
              "name-": {},
              "tag": {
                "type": "string",
                "minLength": 1
              },
              "tag!": {
                "$ref": "#/properties/scan_sources/properties/extra_packages/items/properties/tag"
              },
              "tag?": {
                "$ref": "#/properties/scan_sources/properties/extra_packages/items/properties/tag"
              },
              "tag-": {}
            }
          }
        },
        "extra_packages!": {
          "$ref": "#/properties/scan_sources/properties/extra_packages"
        },
        "extra_packages?": {
          "$ref": "#/properties/scan_sources/properties/extra_packages"
        },
        "extra_packages-": {},
        "exempt_rpms": {
          "description": "Do not trigger builds if rpms listed are the reason for change. Reasons could be tzdata, or when rpms are pinned in Dockerfile",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exempt_rpms!": {
          "$ref": "#/properties/scan_sources/properties/exempt_rpms"
        },
        "exempt_rpms?": {
          "$ref": "#/properties/scan_sources/properties/exempt_rpms"
        },
        "exempt_rpms-": {}
      },
      "additionalProperties": false
    },
    "scan_sources!": {
      "$ref": "#/properties/scan_sources"
    },
    "scan_sources?": {
      "$ref": "#/properties/scan_sources"
    },
    "scan_sources-": {},
    "update-csv": {
      "description": "For operators only. Configures where to look how for operator metadata, among which the clusterserviceversion.yaml file",
      "type": "object",
      "properties": {
        "manifests-dir": {
          "type": "string",
          "minLength": 1
        },
        "manifests-dir!": {
          "$ref": "#/properties/update-csv/properties/manifests-dir"
        },
        "manifests-dir?": {
          "$ref": "#/properties/update-csv/properties/manifests-dir"
        },
        "manifests-dir-": {},
        "bundle-dir": {
          "type": "string",
          "minLength": 1
        },
        "bundle-dir!": {
          "$ref": "#/properties/update-csv/properties/bundle-dir"
        },
        "bundle-dir?": {
          "$ref": "#/properties/update-csv/properties/bundle-dir"
        },
        "bundle-dir-": {},
        "registry": {
          "type": "string",
          "minLength": 1
        },
        "registry!": {
          "$ref": "#/properties/update-csv/properties/registry"
        },
        "registry?": {
          "$ref": "#/properties/update-csv/properties/registry"
        },
        "registry-": {},
        "valid-subscription-label": {
          "type": "string",
          "minLength": 1
        },
        "valid-subscription-label!": {
          "$ref": "#/properties/update-csv/properties/valid-subscription-label"
        },
        "valid-subscription-label?": {
          "$ref": "#/properties/update-csv/properties/valid-subscription-label"
        },
        "valid-subscription-label-": {},
        "channel": {
          "type": "string",
          "minLength": 1
        },
        "channel!": {
          "$ref": "#/properties/update-csv/properties/channel"
        },
        "channel?": {
          "$ref": "#/properties/update-csv/properties/channel"
        },
        "channel-": {},
        "image-map": {
          "type": "object"
        },
        "image-map!": {
          "$ref": "#/properties/update-csv/properties/image-map"
        },
        "image-map?": {
          "$ref": "#/properties/update-csv/properties/image-map"
        },
        "image-map-": {}
      },
      "additionalProperties": false
    },
    "update-csv!": {
      "$ref": "#/properties/update-csv"
    },
    "update-csv?": {
      "$ref": "#/properties/update-csv"
    },
    "update-csv-": {},
    "wait_for": {
      "description": "Deprecated. Only used in 3.11",
      "type": "string",
      "minLength": 1
    },
    "wait_for!": {
      "$ref": "#/properties/wait_for"
    },
    "wait_for?": {
      "$ref": "#/properties/wait_for"
    },
    "wait_for-": {},
    "maintainer": {
      "description": "Metadata of who owns the image",
      "type": "object",
      "properties": {
        "product": {
          "type": "string",
          "minLength": 1
        },
        "product!": {
          "$ref": "#/properties/maintainer/properties/product"
        },
        "product?": {
          "$ref": "#/properties/maintainer/properties/product"
        },
        "product-": {},
        "component": {
          "type": "string",
          "minLength": 1
        },
        "component!": {
          "$ref": "#/properties/maintainer/properties/component"
        },
        "component?": {
          "$ref": "#/properties/maintainer/properties/component"
        },
        "component-": {},
        "subcomponent": {
          "type": "string",
          "minLength": 1
        },
        "subcomponent!": {
          "$ref": "#/properties/maintainer/properties/subcomponent"
        },
        "subcomponent?": {
          "$ref": "#/properties/maintainer/properties/subcomponent"
        },
        "subcomponent-": {}
      },
      "additionalProperties": false
    },
    "maintainer!": {
      "$ref": "#/properties/maintainer"
    },
    "maintainer?": {
      "$ref": "#/properties/maintainer"
    },
    "maintainer-": {},
    "for_payload": {
      "description": "If true, image gets included in the imageStream for the payloads, and builds get collected in the image advisory",
      "type": "boolean"
    },
    "for_payload!": {
      "$ref": "#/properties/for_payload"
    },
    "for_payload?": {
      "$ref": "#/properties/for_payload"
    },
    "for_payload-": {},
    "for_release": {
      "description": "If false, does not get collected in advisories",
      "type": "boolean"
    },
    "for_release!": {
      "$ref": "#/properties/for_release"
    },
    "for_release?": {
      "$ref": "#/properties/for_release"
    },
    "for_release-": {},
    "name_in_bundle": {
      "description": "How the upstream operator calls this operand in the clusterserviceversion.yaml.",
      "type": "string",
      "minLength": 1
    },
    "name_in_bundle!": {
      "$ref": "#/properties/name_in_bundle"
    },
    "name_in_bundle?": {
      "$ref": "#/properties/name_in_bundle"
    },
    "name_in_bundle-": {},
    "is": {
      "description": "Equals. For pinning in assemblies",
      "type": "object",
      "properties": {
        "nvr": {
          "description": "Brew nvr to get pinned",
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "nvr"
      ],
      "additionalProperties": false
    },
    "is!": {
      "$ref": "#/properties/is"
    },
    "is?": {
      "$ref": "#/properties/is"
    },
    "is-": {},
    "external_scanners": {
      "description": "Scanning content configuration",
      "$ref": "scanning.schema.json"
    },
    "external_scanners!": {
      "$ref": "#/properties/external_scanners"
    },
    "external_scanners?": {
      "$ref": "#/properties/external_scanners"
    },
    "check_external_packages": {
      "description": "Defines external RPMs to check when assembling a release (ART-8416)",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Brew component name",
            "type": "string",
            "minLength": 1
          },
          "tag": {
            "type": "string",
            "description": "Brew tag name",
            "minLength": 1
          },
          "condition": {
            "type": "string",
            "description": "How to check external packages",
            "enum": [
              "match",
              "greater_equal"
            ]
          }
        },
        "required": [
          "name",
          "tag",
          "condition"
        ],
        "additionalProperties": false
      }
    }
  },
  "additionalProperties": false
}
